#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ S3 bucket –≤ LocalStack
"""

import boto3
import os
import time
import requests
from botocore.exceptions import ClientError


def wait_for_localstack():
    """–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ LocalStack"""
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ LocalStack...")
    
    max_attempts = 30
    for attempt in range(max_attempts):
        try:
            response = requests.get("http://localhost:4566/_localstack/health", timeout=5)
            if response.status_code == 200:
                print("‚úÖ LocalStack –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
                return True
        except requests.exceptions.RequestException:
            pass
        
        if attempt < max_attempts - 1:
            print(f"  –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_attempts}...")
            time.sleep(2)
    
    print("‚ùå LocalStack –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
    return False


def init_localstack():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LocalStack S3"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è LocalStack
    endpoint_url = "http://localhost:4566"
    bucket_name = "events-bot-uploads"
    
    # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ LocalStack
    if not wait_for_localstack():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–∂–¥–∞—Ç—å—Å—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ LocalStack")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ LocalStack –∑–∞–ø—É—â–µ–Ω:")
        print("docker-compose -f docker-compose-dev.yaml up localstack")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç S3
    s3_client = boto3.client(
        's3',
        endpoint_url=endpoint_url,
        aws_access_key_id='test',
        aws_secret_access_key='test',
        region_name='us-east-1'
    )
    
    print(f"üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LocalStack S3...")
    print(f"Endpoint: {endpoint_url}")
    print(f"Bucket: {bucket_name}")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ bucket
        try:
            s3_client.head_bucket(Bucket=bucket_name)
            print(f"‚úÖ Bucket '{bucket_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        except ClientError as e:
            if e.response['Error']['Code'] == '404':
                # Bucket –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
                print(f"üì¶ –°–æ–∑–¥–∞–µ–º bucket '{bucket_name}'...")
                s3_client.create_bucket(Bucket=bucket_name)
                print(f"‚úÖ Bucket '{bucket_name}' —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            else:
                raise
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º CORS –¥–ª—è bucket (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        cors_configuration = {
            'CORSRules': [{
                'AllowedHeaders': ['*'],
                'AllowedMethods': ['GET', 'PUT', 'POST', 'DELETE'],
                'AllowedOrigins': ['*'],
                'ExposeHeaders': ['ETag']
            }]
        }
        
        try:
            s3_client.put_bucket_cors(Bucket=bucket_name, CORSConfiguration=cors_configuration)
            print("‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è bucket")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å CORS: {e}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞
        test_data = b"test file content"
        test_key = "test.txt"
        
        try:
            s3_client.put_object(
                Bucket=bucket_name,
                Key=test_key,
                Body=test_data
            )
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ '{test_key}' —É—Å–ø–µ—à–Ω–∞")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            s3_client.delete_object(Bucket=bucket_name, Key=test_key)
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª '{test_key}' —É–¥–∞–ª–µ–Ω")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        
        print("\nüéâ LocalStack S3 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"Bucket: {bucket_name}")
        print(f"Endpoint: {endpoint_url}")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å S3 —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ")
        print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–π —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:")
        print("docker-compose -f docker-compose-dev.yaml up -d")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ LocalStack: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ LocalStack –∑–∞–ø—É—â–µ–Ω: docker-compose -f docker-compose-dev.yaml up localstack")
        return False


if __name__ == "__main__":
    init_localstack() 