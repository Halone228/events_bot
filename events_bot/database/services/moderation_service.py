from sqlalchemy.ext.asyncio import AsyncSession
from typing import List
from ..repositories import PostRepository, ModerationRepository
from ..models import Post, ModerationAction


class ModerationService:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π"""

    @staticmethod
    async def get_moderation_queue(db: AsyncSession) -> List[Post]:
        """–ü–æ–ª—É—á–∏—Ç—å –æ—á–µ—Ä–µ–¥—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""
        return await PostRepository.get_pending_moderation(db)

    @staticmethod
    async def get_moderation_history(db: AsyncSession, post_id: int) -> List:
        """–ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞"""
        return await ModerationRepository.get_moderation_history(db, post_id)

    @staticmethod
    async def get_actions_by_type(db: AsyncSession, action: ModerationAction) -> List:
        """–ü–æ–ª—É—á–∏—Ç—å –∑–∞–ø–∏—Å–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É –¥–µ–π—Å—Ç–≤–∏—è"""
        return await ModerationRepository.get_actions_by_type(db, action)

    @staticmethod
    def format_post_for_moderation(post: Post) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""
        return (
            f"üìã –ü–æ—Å—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é\n\n"
            f"üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: {post.title}\n"
            f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {post.category.name}\n"
            f"üë§ –ê–≤—Ç–æ—Ä: {post.author.first_name or post.author.username or '–ê–Ω–æ–Ω–∏–º'}\n"
            f"üìÖ –°–æ–∑–¥–∞–Ω: {post.created_at.strftime('%d.%m.%Y %H:%M')}\n\n"
            f"üìÑ –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:\n{post.content}\n\n"
            f"üÜî ID –ø–æ—Å—Ç–∞: {post.id}"
        )

    @staticmethod
    def get_action_display_name(action: ModerationAction) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –¥–µ–π—Å—Ç–≤–∏—è"""
        action_names = {
            ModerationAction.APPROVE: "–û–¥–æ–±—Ä–µ–Ω–æ",
            ModerationAction.REJECT: "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ",
            ModerationAction.REQUEST_CHANGES: "–¢—Ä–µ–±—É—é—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏—è",
        }
        return action_names.get(action, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
